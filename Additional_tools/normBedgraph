#!/bin/sh

#  normBedgraph
#
#  This scripts normalizes bedgraph files based on different library sizes
#
#  Usage:
#    bash normBedgraph --untrs /data2/steven/eIF1/NTuniq3/output/untreat_sense.bedgraph --untras /data2/steven/eIF1/NTuniq3/output/untreat_antisense.bedgraph --nttrs /data2/steven/eIF1/NTuniq3/output/treat_sense.bedgraph --nttras /data2/steven/eIF1/NTuniq3/output/treat_antisense.bedgraph --libuntr 37873493 --libtr 45427218
#
#  Created by Steven Verbruggen in 2015.
#

#Command line input
UNTRS=
UNTRAS=
TRS=
TRAS=
LIBUNTR=
LIBTR=
while [ "$1" != "" ] ; do
    case $1 in
        --untrs)              shift
                                UNTRS=$1
                                ;;
        --untras )            shift
                                UNTRAS=$1
                                ;;
        --trs )               shift
                                TRS=$1
                                ;;
        --tras )              shift
                                TRAS=$1
                                ;;
        --libuntr )           shift
                                LIBUNTR=$1
                                ;;
        --libtr )             shift
                                LIBTR=$1
                                ;;
    esac
    shift
done

#Print command line arguments
echo "-------------------"
echo "Normalize bedgraphs"
echo "-------------------"
echo
echo "ARGUMENTS:"
echo " --untrs = $UNTRS"
echo " --untras = $UNTRAS"
echo " --trs = $TRS"
echo " --tras = $TRAS"
echo " --libuntr = $LIBUNTR"
echo " --libtr = $LIBTR"
echo

#Group lib sizes in one array
LIBSIZES=($LIBUNTR $LIBTR)

#Determine minimum lib size
min=100000000000000
for n in "${LIBSIZES[@]}"
do
    ((n < min)) && min=$n
done

#Calculate normalization factors
normuntr=$(bc -l <<< "$LIBUNTR/$min")
normtr=$(bc -l <<< "$LIBTR/$min")
NORMFACTORS=($normuntr $normuntr $normtr $normtr)

#Put all files in array
FILES=()
FILES+=($UNTRS)
FILES+=($UNTRAS)
FILES+=($TRS)
FILES+=($TRAS)

#Outputfiles
OUTPUTFILES=("untrs.bedgraph" "untras.bedgraph" "trs.bedgraph" "tras.bedgraph")
j=-1

#Do changes and write to output files
for i in "${FILES[@]}"
do
    j=$((j + 1))
    awk -v out=${OUTPUTFILES[j]} -v norm=${NORMFACTORS[j]} '{
        if ($1 ~ /^chr/)
        {
            $4=$4/norm;
            print $1, $2, $3, $4 > out;
        }
        else
        {
            print $0 > out;
        }
    }' $i
done




